{"version":3,"sources":["../../src/database/getDatabase.js"],"names":["CLOUD_BUCKET","process","env","logger","Logger","getLogger","db","database","functions","getType","select","col","table","then","res","Promise","resolve","type","results","catch","err","error","reject","method","getBasic","limit","basicData","folder_id","avatar_img","profile_img","avatar","profile","getPhone","id","conditions","length","map","data","type_id","typeRes","phoneNumbers","p","t","phoneDetails","user","short","long","number","push","getSocial","socialData","s","socialDetails","link","getSkills","getTechnologies","values","r","value","img","image","name","detail","category","getRepositories","repositoryData","repoDetails","getExperience","getEducation","course","school","year","getPapers","code","details","grade","course_id","getAchievements","where","whatWhy","what_why","getInterests"],"mappings":"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","sourceRoot":"start.js","sourcesContent":["import Logger from '../helpers/logger';\r\nimport database from '../helpers/database';\r\n\r\nconst { CLOUD_BUCKET } = process.env;\r\n\r\nconst logger = Logger.getLogger();\r\nconst db = new database();\r\n\r\nconst functions = {};\r\n\r\nfunctions.getType = function () {\r\n    return db.select({ col: '*', table: 'type'}).then((res) => {\r\n        return Promise.resolve({\r\n            type: 'type',\r\n            results: res\r\n        });\r\n    }).catch((err) => {\r\n        logger.error(`Database error: ${err}`);\r\n\r\n        return Promise.reject({\r\n            method: 'getType',\r\n            err: err\r\n        });\r\n    });\r\n}\r\n\r\nfunctions.getBasic = function () {\r\n    return db.select({ col: '*', table: 'basic', limit: '1'}).then((res) => {\r\n        const { 0: basicData} = res;\r\n\r\n        if (typeof (basicData) != 'undefined' && (basicData.folder_id && basicData.avatar_img && basicData.profile_img)) {\r\n            basicData.avatar = `https://storage.googleapis.com/${CLOUD_BUCKET}/${basicData.folder_id}/${basicData.avatar_img}`;\r\n            basicData.profile = `https://storage.googleapis.com/${CLOUD_BUCKET}/${basicData.folder_id}/${basicData.profile_img}`;\r\n\r\n            return Promise.resolve({\r\n                type: 'basic',\r\n                results: basicData\r\n            });\r\n        } else {\r\n            return Promise.resolve({\r\n                type: 'basic',\r\n                results: basicData\r\n            });\r\n        }\r\n    }).catch((err) => {\r\n        logger.error(`Database error: ${err}`);\r\n\r\n        return Promise.reject({\r\n            method: 'getBasic',\r\n            err: err\r\n        });\r\n    });\r\n}\r\n\r\nfunctions.getPhone = function (id) {\r\n    if (id > -1) {\r\n        return db.select({ col: '*', table: 'phone', conditions: `user = ${id}`}).then((res) => {\r\n            if (res.length > 0) {\r\n                return db.select({ col: '*', table: 'type', conditions: `id IN (${res.map((data) => data.type_id)})`}).then((typeRes) => {\r\n                    const phoneNumbers = [];\r\n                    \r\n                    for (let p = 0; p < res.length; p++) {\r\n                        for (let t = 0; t < typeRes.length; t++) {\r\n                            if (res[p].type_id == typeRes[t].id) {\r\n                                const phoneDetails = {\r\n                                    id: res[p].id,\r\n                                    user: res[p].user,\r\n                                    type: {\r\n                                        id: typeRes[t].id,\r\n                                        short: typeRes[t].short,\r\n                                        long: typeRes[t].long\r\n                                    },\r\n                                    number: res[p].number\r\n                                };\r\n\r\n                                phoneNumbers.push(phoneDetails);\r\n                            }\r\n                        }\r\n\r\n                        if (phoneNumbers.length == res.length) {\r\n                            return Promise.resolve({\r\n                                type: 'phone',\r\n                                results: phoneNumbers\r\n                            });\r\n                        }\r\n                    }\r\n                }).catch((err) => {\r\n                    logger.error(`Database error: ${err}`);\r\n            \r\n                    return Promise.reject({\r\n                        method: 'getPhone',\r\n                        err: err\r\n                    });\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    type: 'phone',\r\n                    results: res\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n    \r\n            return Promise.reject({\r\n                method: 'getPhone',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'phone',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nfunctions.getSocial = function (id) {\r\n    if (id > -1) {\r\n        return db.select({ col: '*', table: 'social', conditions: `user = ${id}`}).then((res) => {\r\n            if (res.length > 0) {\r\n                return db.select({ col: '*', table: 'type', conditions: `id IN (${res.map((data) => data.type_id)})`}).then((typeRes) => {\r\n                    const socialData = [];\r\n\r\n                    for (let s = 0; s < res.length; s++) {\r\n                        for (let t = 0; t < typeRes.length; t++) {\r\n                            if (res[s].type_id == typeRes[t].id) {\r\n                                const socialDetails = {\r\n                                    id: res[s].id,\r\n                                    user: res[s].user,\r\n                                    type: {\r\n                                        id: typeRes[t].id,\r\n                                        short: typeRes[t].short,\r\n                                        long: typeRes[t].long\r\n                                    },\r\n                                    link: res[s].link\r\n                                };\r\n\r\n                                socialData.push(socialDetails);\r\n                            }\r\n                        }\r\n\r\n                        if (res.length == socialData.length) {\r\n                            return Promise.resolve({\r\n                                type: 'social',\r\n                                results: socialData\r\n                            });\r\n                        }\r\n                    }\r\n                }).catch((err) => {\r\n                    logger.error(`Database error: ${err}`);\r\n            \r\n                    return Promise.reject({\r\n                        method: 'getSocial',\r\n                        err: err\r\n                    });\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    type: 'social',\r\n                    results: res\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n    \r\n            return Promise.reject({\r\n                method: 'getSocial',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'phone',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nfunctions.getSkills = function (id) {\r\n    if (id > -1) {\r\n        return db.select({ col: '*', table: 'skill', conditions: `user = ${id}`}).then((res) => {\r\n            return Promise.resolve({\r\n                type: 'skills',\r\n                results: res\r\n            });\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n    \r\n            return Promise.reject({\r\n                method: 'getSkills',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'skills',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nfunctions.getTechnologies = function (id) {\r\n    if (id > -1) {\r\n        return db.select({ col: '*', table: 'technology', conditions: `user = ${id}`}).then((res) => {\r\n            const values = [];\r\n\r\n            for (let r = 0; r < res.length; r++) {\r\n                const value = {\r\n                    id: res[r].id,\r\n                    user: res[r].user,\r\n                    img: res[r].image,\r\n                    name: res[r].name,\r\n                    detail: res[r].detail,\r\n                    link: res[r].link,\r\n                    category: res[r].category\r\n                };\r\n\r\n                values.push(value);\r\n\r\n                if (values.length == res.length) {\r\n                    return Promise.resolve({\r\n                        type: 'technology',\r\n                        results: values\r\n                    });\r\n                }\r\n            }\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n    \r\n            return Promise.reject({\r\n                method: 'getTechnologies',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'technology',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nfunctions.getRepositories = function (id) {\r\n    if (id > -1) {\r\n        return db.select({ col: '*', table: 'repository', conditions: `user = ${id}`}).then((res) => {\r\n            if (res.length > 0) {\r\n                return db.select({ col: '*', table: 'type', conditions: `id IN (${res.map((data) => data.type_id)})`}).then((typeRes) => {\r\n                    const repositoryData = [];\r\n\r\n                    for (let r = 0; r < res.length; r++) {\r\n                        for (let t = 0; t < typeRes.length; t++) {\r\n                            if (res[r].type_id == typeRes[t].id) {\r\n                                const repoDetails = {\r\n                                    id: res[r].id,\r\n                                    user: res[r].user,\r\n                                    type: {\r\n                                        id: typeRes[t].id,\r\n                                        short: typeRes[t].short,\r\n                                        long: typeRes[t].long\r\n                                    },\r\n                                    link: res[r].link\r\n                                };\r\n\r\n                                repositoryData.push(repoDetails);\r\n                            }\r\n                        }\r\n\r\n                        if (res.length == repositoryData.length) {\r\n                            return Promise.resolve({\r\n                                type: 'repository',\r\n                                results: repositoryData\r\n                            });\r\n                        }\r\n                    }\r\n                }).catch((err) => {\r\n                    logger.error(`Database error: ${err}`);\r\n            \r\n                    return Promise.reject({\r\n                        method: 'getRepositories',\r\n                        err: err\r\n                    });\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    type: 'repository',\r\n                    results: res\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n    \r\n            return Promise.reject({\r\n                method: 'getRepositories',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'repository',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nfunctions.getExperience = function (id) {\r\n    if (id > -1) {\r\n        return db.select({ col: '*', table: 'experience', conditions: `user = ${id}`}).then((res) => {\r\n            return Promise.resolve({\r\n                type: 'experience',\r\n                results: res\r\n            });\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n    \r\n            return Promise.reject({\r\n                method: 'getExperience',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'experience',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nfunctions.getEducation = function (id) {\r\n    if (id > -1) {\r\n        return db.select({ col: '*', table: 'education', conditions: `user = ${id}`}).then((res) => {\r\n            const values = [];\r\n\r\n            for (let r = 0; r < res.length; r++) {\r\n                var data = {\r\n                    id: res[r].id,\r\n                    user: res[r].user,\r\n                    img: res[r].image,\r\n                    course: res[r].course,\r\n                    school: res[r].school,\r\n                    link: res[r].link,\r\n                    year: res[r].year\r\n                };\r\n\r\n                values.push(data);\r\n\r\n                if (values.length == res.length) {\r\n                    return Promise.resolve({\r\n                        type: 'education',\r\n                        results: values\r\n                    });\r\n                }\r\n            }\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n            \r\n            return Promise.reject({\r\n                method: 'getEducation',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'education',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nfunctions.getPapers = function (id) {\r\n    if (id.length) {\r\n        return db.select({ col: '*', table: 'paper', conditions: `course_id IN (${id})`}).then((res) => {\r\n            const values = [];\r\n\r\n            for (let r = 0; r < res.length; r++) {\r\n                var data = {\r\n                    id: res[r].id,\r\n                    code: res[r].code,\r\n                    name: res[r].name,\r\n                    detail: res[r].details,\r\n                    grade: res[r].grade,\r\n                    course: res[r].course_id\r\n                };\r\n\r\n                values.push(data);\r\n\r\n                if (values.length == res.length) {\r\n                    return Promise.resolve({\r\n                        type: 'paper',\r\n                        results: values\r\n                    });\r\n                }\r\n            }\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n    \r\n            return Promise.reject({\r\n                method: 'getPapers',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'paper',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nfunctions.getAchievements = function (id) {\r\n    if (id > -1) {\r\n        return db.select({ col: '*', table: 'achievement', conditions: `user = ${id}`}).then((res) => {\r\n            const values = [];\r\n\r\n            for (let r = 0; r < res.length; r++) {\r\n                var data = {\r\n                    id: res[r].id,\r\n                    user: res[r].user,\r\n                    name: res[r].name,\r\n                    where: res[r].where,\r\n                    whatWhy: res[r].what_why\r\n                };\r\n\r\n                values.push(data);\r\n\r\n                if (values.length == res.length) {\r\n                    return Promise.resolve({\r\n                        type: 'achievement',\r\n                        results: values\r\n                    });\r\n                }\r\n            }\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n    \r\n            return Promise.reject({\r\n                method: 'getAchievements',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'achievement',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nfunctions.getInterests = function (id) {\r\n    if (id > -1) {\r\n        return db.select({ col: '*', table: 'interest', conditions: `user = ${id}`}).then((res) => {\r\n            const values = [];\r\n\r\n            for (let r = 0; r < res.length; r++) {\r\n                var data = {\r\n                    id: res[r].id,\r\n                    user: res[r].user,\r\n                    img: res[r].image,\r\n                    name: res[r].name\r\n                };\r\n\r\n                values.push(data);\r\n\r\n                if (values.length == res.length) {\r\n                    return Promise.resolve({\r\n                        type: 'interest',\r\n                        results: values\r\n                    });\r\n                }\r\n            }\r\n        }).catch((err) => {\r\n            logger.error(`Database error: ${err}`);\r\n    \r\n            return Promise.reject({\r\n                method: 'getInterests',\r\n                err: err\r\n            });\r\n        });\r\n    } else {\r\n        return Promise.resolve({\r\n            type: 'interest',\r\n            results: null\r\n        });\r\n    }\r\n}\r\n\r\nexport default functions;\r\n"],"file":"getDatabase.js"}