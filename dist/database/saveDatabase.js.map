{"version":3,"sources":["../../src/database/saveDatabase.js"],"names":["logger","Logger","getLogger","db","database","functions","saveBasic","basicData","folderId","currentId","fm","saveBasicImages","avatar","profile","then","paths","pendingFunction","sql","data","name","address_1","address_2","address_3","city","summary","show_referees","show_repositories","id","col","update","table","conditions","insert","res","insertId","Promise","resolve","catch","err","error","reject","method"],"mappings":"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","sourceRoot":"start.js","sourcesContent":["import Logger from '../helpers/logger';\r\nimport database from '../helpers/database';\r\nimport fm from '../helpers/fileManager';\r\nimport uuid from 'uuid/v4';\r\n\r\nconst logger = Logger.getLogger();\r\nconst db = new database();\r\n\r\nconst functions = {};\r\n\r\nfunctions.saveBasic = function (basicData) {\r\n    let folderId;\r\n\r\n    if (basicData.folderId && basicData.folderId !== null && typeof (basicData.folderId) != 'undefined') {\r\n        const { folderId: currentId } = basicData;\r\n\r\n        folderId = currentId;\r\n    } else {\r\n        folderId = uuid();\r\n    }\r\n\r\n    return fm.saveBasicImages(folderId, basicData.avatar, basicData.profile).then((paths) => {\r\n        let pendingFunction;\r\n        let sql;\r\n        const data = [\r\n            folderId,\r\n            paths.avatar,\r\n            paths.profile,\r\n            basicData.name,\r\n            basicData.address_1,\r\n            basicData.address_2,\r\n            basicData.address_3,\r\n            basicData.city,\r\n            basicData.summary,\r\n            basicData.show_referees ? 1 : 0,\r\n            basicData.show_repositories ? 1 : 0\r\n        ];\r\n\r\n        if (basicData.id && basicData.id !== null && typeof (basicData.id) != 'undefined') {\r\n            const col = [\r\n                'folder_id',\r\n                'avatar_img',\r\n                'profile_img',\r\n                'name',\r\n                'address_1',\r\n                'address_2',\r\n                'address_3',\r\n                'city',\r\n                'summary',\r\n                'show_referees',\r\n                'show_repositories'\r\n            ];\r\n\r\n            pendingFunction = db.update;\r\n\r\n            sql = {\r\n                table: 'basic',\r\n                col: col,\r\n                data: data,\r\n                conditions: `id = ${basicData.id}`\r\n            }\r\n        } else {\r\n            pendingFunction = db.insert;\r\n\r\n            sql = {\r\n                table: 'basic',\r\n                col: 'folder_id, avatar_img, profile_img, name, address_1, address_2, address_3, city, summary, show_referees, show_repositories',\r\n                data: data\r\n            }\r\n        }\r\n\r\n        return pendingFunction(sql).then((res) => {\r\n            if (res.insertId > 0) {\r\n                return Promise.resolve(res.insertId);\r\n            } else {\r\n                return Promise.resolve(basicData.id);\r\n            }\r\n        }).catch((err) => {\r\n            logger.error(`Database Error: ${err}`);\r\n\r\n            return Promise.reject({\r\n                method: 'saveBasic',\r\n                err: err\r\n            });\r\n        });\r\n\r\n    }).catch((err) => {\r\n        logger.error(`File Error: ${err}`)\r\n\r\n        return Promise.reject({\r\n            method: 'saveBasic',\r\n            err: err\r\n        });\r\n    });\r\n}\r\n\r\nexport default functions;\r\n"],"file":"saveDatabase.js"}