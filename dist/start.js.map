{"version":3,"sources":["../src/start.js"],"names":["require","config","path","join","__dirname","logger","Logger","createLogger","port","process","env","PORT","https","createServer","app","on","err","error","message","stack","reason","promise","server","listen","debug","host","address","info","cluster","worker","id"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,CAAyB;AAAEC,EAAAA,IAAI,EAAEA,cAAKC,IAAL,CAAUC,SAAV,EAAqB,MAArB;AAAR,CAAzB,E,CACA;AACA;AACA;AACA;;;AAEA,IAAMC,MAAM,GAAGC,gBAAOC,YAAP,CAAoB,QAApB,CAAf;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA,IAAMC,KAAK,GAAGZ,OAAO,CAAC,MAAD,CAAP,CAAgBa,YAAhB,CAA6BC,YAA7B,CAAd;;AAEAL,OAAO,CAACM,EAAR,CAAW,mBAAX,EAAgC,UAASC,GAAT,EAAc;AAC1CX,EAAAA,MAAM,CAACY,KAAP,CAAa,gCAAb,EAA+CD,GAAG,CAACE,OAAnD,EAA4DF,GAAG,CAACG,KAAhE;AACH,CAFD;AAIAV,OAAO,CAACM,EAAR,CAAW,oBAAX,EAAiC,UAACK,MAAD,EAASC,OAAT,EAAqB;AAClDhB,EAAAA,MAAM,CAACY,KAAP,CAAa,iCAAb,EAAgDG,MAAhD,EAAwDC,OAAxD;AACH,CAFD;AAIA,IAAMC,MAAM,GAAGV,KAAK,CAACW,MAAN,CAAaf,IAAb,EAAmB,UAACQ,GAAD,EAAS;AACvC,MAAIA,GAAJ,EAAS;AACLX,IAAAA,MAAM,CAACY,KAAP,CAAa,8BAAb,EAA6CD,GAAG,CAACE,OAAjD,EAA0DF,GAAG,CAACG,KAA9D;AACH;;AAED,MAAIK,aAAJ,EAAW;AACP,QAAIC,IAAI,GAAGH,MAAM,CAACI,OAAP,EAAX;;AAEA,QAAI,CAACD,IAAD,IAAU,CAACA,IAAI,CAACC,OAAN,IAAiBD,IAAI,CAACC,OAAL,IAAgB,EAAjC,IAAuCD,IAAI,CAACC,OAAL,IAAgB,IAArE,EAA4E;AACxED,MAAAA,IAAI,CAACC,OAAL,GAAe,WAAf;AACH;;AAEDrB,IAAAA,MAAM,CAACsB,IAAP,yCAA6CF,IAAI,CAACC,OAAlD,cAA6DD,IAAI,CAACjB,IAAlE,0BAAsFoB,iBAAQC,MAAR,CAAeC,EAArG;AACH;AACJ,CAdc,CAAf","sourceRoot":"start.js","sourcesContent":["import Logger from './helpers/logger';\r\nimport app from './helpers/app';\r\nimport cluster from 'cluster';\r\nimport { debug } from './config/config';\r\nimport path from 'path';\r\n\r\nrequire('dotenv').config({ path: path.join(__dirname, '.env')});\r\n// require('@google-cloud/debug-agent').start({\r\n//     allowExpressions: true,\r\n//     appPathRelativeToRepository: 'dist'\r\n// });\r\n\r\nconst logger = Logger.createLogger('worker');\r\n\r\nconst port = process.env.PORT || 3000;\r\n\r\nconst https = require('http').createServer(app);\r\n\r\nprocess.on('uncaughtException', function(err) {\r\n    logger.error('Uncaught Exception => %s\\n\\n%s', err.message, err.stack);\r\n});\r\n\r\nprocess.on('unhandledRejection', (reason, promise) => {\r\n    logger.error('Unhandled Rejection => %s\\n\\n%s', reason, promise);\r\n});\r\n\r\nconst server = https.listen(port, (err) => {\r\n    if (err) {\r\n        logger.error('Connection Error => %s\\n\\n%s', err.message, err.stack);\r\n    }\r\n\r\n    if (debug) {\r\n        var host = server.address();\r\n\r\n        if (!host || (!host.address || host.address == '' || host.address == '::')) {\r\n            host.address = 'localhost';\r\n        }\r\n\r\n        logger.info(`Server is listening on http://${host.address}:${host.port} with Worker ${cluster.worker.id}`);\r\n    }\r\n});\r\n"],"file":"start.js"}