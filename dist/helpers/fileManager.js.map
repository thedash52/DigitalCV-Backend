{"version":3,"sources":["../../src/helpers/fileManager.js"],"names":["storage","Storage","projectId","process","env","PROJECT_ID","CLOUD_BUCKET","bucket","functions","testStorageAuth","Promise","resolve","reject","getBuckets","then","data","buckets","catch","err","saveBasicImages","id","avatar_image","profile_image","avatarImage","replace","profileImage","folderDir","avatarFile","file","profileFile","options","metadata","contentType","resumable","avatarStream","createWriteStream","profileStream","on","method","makePublic","avatar","profile","end","buffer","from"],"mappings":"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","sourceRoot":"start.js","sourcesContent":["import { Storage } from '@google-cloud/storage';\r\nimport buffer from 'buffer';\r\n\r\nconst storage = new Storage({\r\n\tprojectId: process.env.PROJECT_ID\r\n});\r\n\r\nconst { CLOUD_BUCKET } = process.env;\r\n\r\nconst bucket = storage.bucket(CLOUD_BUCKET);\r\n\r\nconst functions = {};\r\n\r\nfunctions.testStorageAuth = function () {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tstorage.getBuckets().then(function (data) {\r\n\t\t\tconst { 0: buckets } = data;\r\n\r\n\t\t\tresolve(buckets);\r\n\t\t})\r\n\t\t.catch(function (err) {\r\n\t\t\treject(err);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunctions.saveBasicImages = function (id, avatar_image, profile_image) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst avatarImage = avatar_image.replace(/^data:image\\/\\w+;base64,/, '');\r\n\t\tconst profileImage = profile_image.replace(/^data:image\\/\\w+;base64,/, '');\r\n\r\n\t\tconst folderDir = `/backend/${id}/images/basic`;\r\n\t\t\r\n\t\tconst avatarFile = bucket.file(`${folderDir}/avatar_img.jpg`);\r\n\t\tconst profileFile = bucket.file(`${folderDir}/profile_img.jpg`);\r\n\r\n\t\tconst options = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tcontentType: 'image/jpeg'\r\n\t\t\t},\r\n\t\t\tresumable: false\r\n\t\t};\r\n\r\n\t\tconst avatarStream = avatarFile.createWriteStream(options);\r\n\t\tconst profileStream = profileFile.createWriteStream(options);\r\n\r\n\t\tavatarStream.on('error', (err) => {\r\n\t\t\treject({\r\n\t\t\t\tmethod: 'saveBasicImages',\r\n\t\t\t\terr: err\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tprofileStream.on('error', (err) => {\r\n\t\t\treject({\r\n\t\t\t\tmethod: 'saveBasicImages',\r\n\t\t\t\terr: err\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tprofileStream.on('finish', () => {\r\n\t\t\tprofileFile.makePublic().then(() => {\r\n\t\t\t\tresolve({\r\n\t\t\t\t\tavatar: `/images/basic/avatar_img.jpg`,\r\n\t\t\t\t\tprofile: `/images/basic/profile_img.jpg}`\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tavatarStream.on('finish', () => {\r\n\t\t\tavatarFile.makePublic().then(() => {\r\n\t\t\t\tprofileStream.end(buffer.from(profileImage, 'base64'));\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tavatarStream.end(buffer.from(avatarImage, 'base64'));\r\n\t});\r\n}\r\n\r\nexport default functions;"],"file":"fileManager.js"}