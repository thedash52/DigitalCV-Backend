{"version":3,"sources":["../../src/helpers/app.js"],"names":["auth","Auth","whiteList","debug","corsWhiteListDebug","corsWhiteListProd","corsOptions","origin","cb","undefined","indexOf","Error","methods","allowedHeaders","app","set","use","bodyParser","json","limit","initialize","get","req","res","status","post","TestController","AuthController","GetController","VerifyController","SaveController"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,aAAJ,EAAb;AAEA,IAAIC,SAAS,GAAGC,gBAAQC,0BAAR,GAA6BC,yBAA7C;AAEA,IAAIC,WAAW,GAAG;AACdC,EAAAA,MAAM,EAAE,gBAAUA,OAAV,EAAkBC,EAAlB,EAAsB;AAC1B,QAAID,OAAM,KAAKE,SAAX,IAAwBP,SAAS,CAACQ,OAAV,CAAkBH,OAAlB,MAA8B,CAAC,CAAvD,IAA4DL,SAAS,CAACQ,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAA5F,EAA+F;AAC3FF,MAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACH,KAFD,MAEO;AACHA,MAAAA,EAAE,CAAC,IAAIG,KAAJ,CAAU,qBAAV,CAAD,CAAF;AACH;AACJ,GAPa;AAQdC,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,CARK;AASdC,EAAAA,cAAc,EAAE,CAAC,QAAD,EAAW,kBAAX,EAA+B,cAA/B,EAA+C,QAA/C,EAAyD,eAAzD;AATF,CAAlB;AAYA,IAAIC,GAAG,GAAG,uBAAV;AACAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,IAAvB;AACAD,GAAG,CAACE,GAAJ,CAAQ,mBAAKV,WAAL,CAAR;AACAQ,GAAG,CAACE,GAAJ,CAAQC,oBAAWC,IAAX,CAAgB;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAhB,CAAR;AAGAL,GAAG,CAACE,GAAJ,CAAQhB,IAAI,CAACoB,UAAL,EAAR;AAEAN,GAAG,CAACO,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC5BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,sBAArB;AACH,CAFD;AAIAJ,GAAG,CAACW,IAAJ,CAAS,GAAT,EAAc,UAASH,GAAT,EAAcC,GAAd,EAAmB;AAC7BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB,yEAArB;AACH,CAFD;AAIAJ,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiBU,uBAAjB;AACAZ,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiBW,uBAAjB;AACAb,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAgBY,sBAAhB;AACAd,GAAG,CAACE,GAAJ,CAAQ,SAAR,EAAmBa,yBAAnB;AACAf,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiBc,uBAAjB;eAEehB,G","sourceRoot":"start.js","sourcesContent":["import { corsWhiteListDebug, corsWhiteListProd, debug } from '../config/config';\r\nimport Auth from './auth';\r\nimport AuthController from '../api/AuthController';\r\nimport GetController from '../api/GetController';\r\nimport SaveController from '../api/SaveController';\r\nimport TestController from '../api/TestController';\r\nimport VerifyController from '../api/VerifyController';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport express from 'express';\r\n\r\nconst auth = new Auth();\r\n\r\nvar whiteList = debug ? corsWhiteListDebug : corsWhiteListProd;\r\n\r\nvar corsOptions = {\r\n    origin: function (origin, cb) {\r\n        if (origin === undefined || whiteList.indexOf(origin) !== -1 || whiteList.indexOf('*') !== -1) {\r\n            cb(null, true);\r\n        } else {\r\n            cb(new Error('Not allowed by CORS'));\r\n        }\r\n    },\r\n    methods: ['GET', 'POST'],\r\n    allowedHeaders: ['Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'Authorization']\r\n};\r\n\r\nvar app = express();\r\napp.set('trust proxy', true);\r\napp.use(cors(corsOptions));\r\napp.use(bodyParser.json({\r\n    limit: '50mb'\r\n}));\r\napp.use(auth.initialize())\r\n\r\napp.get('/', function(req, res) {\r\n    res.status(200).json(\"Nothing to see here!\");\r\n});\r\n\r\napp.post('/', function(req, res) {\r\n    res.status(200).json(\"This is all good and all, but what do you want me to do with that data.\");\r\n});\r\n\r\napp.use('/test', TestController);\r\napp.use('/auth', AuthController);\r\napp.use('/get', GetController);\r\napp.use('/verify', VerifyController);\r\napp.use('/save', SaveController);\r\n\r\nexport default app;\r\n"],"file":"app.js"}