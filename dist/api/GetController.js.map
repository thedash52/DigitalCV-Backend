{"version":3,"sources":["../../src/api/GetController.js"],"names":["logger","Logger","getLogger","routes","returnRes","res","Promise","resolve","use","bodyParser","json","get","req","status","post","db","getType","then","result","catch","err","error","sendStatus","success","getBasic","all","getPhone","results","id","getSocial","values","basic","phone","social","i","length","type","getSkills","headers","resData","data","user","category","details","push","getTechnologies","getRepositories","technologies","repositories","getEducation","getPapers","map","x","education","papers","getExperience","experience","image","title","location","description","start_date","end_date","current","getAchievements","getInterests","achievement","interest"],"mappings":"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","sourceRoot":"start.js","sourcesContent":["import Logger from '../helpers/logger';\r\nimport { Router } from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport db from '../database/getDatabase';\r\n\r\nconst logger = Logger.getLogger('api');\r\nconst routes = Router();\r\n\r\nfunction returnRes (res) {\r\n    return new Promise((resolve) => {\r\n        resolve(res);\r\n    });\r\n}\r\n\r\nroutes.use(bodyParser.json());\r\n\r\nroutes.get('/', function (req, res) {\r\n\tres.status(200).json('Nothing to see here!');\r\n});\r\n\r\nroutes.post('/', function (req, res) {\r\n\tres.status(200).json('This is all good and all, but what do you want me to do with that data.');\r\n});\r\n\r\nroutes.get('/type', function (req, res) {\r\n    db.getType().then((result) => res.status(200).json(result)).catch((err) => {\r\n        logger.error(err);\r\n        res.sendStatus(500).json({\r\n            success: 'false',\r\n            err: err\r\n        });\r\n    });\r\n});\r\n\r\nroutes.get('/basic', function (req, res) {\r\n    db.getBasic().then((result) => Promise.all([\r\n        returnRes(result),\r\n        db.getPhone(typeof (result.results) == 'undefined' ? -1 : result.results.id),\r\n        db.getSocial(typeof (result.results) == 'undefined' ? -1 : result.results.id)\r\n    ])).then((results) => {\r\n        const values = {\r\n            basic: null,\r\n            phone: null,\r\n            social: null\r\n        };\r\n\r\n        for (let i = 0; i < results.length; i++) {\r\n            const result = results[i];\r\n\r\n            if (result) {\r\n                switch (result.type) {\r\n                    case 'basic':\r\n                        values.basic = result.results;\r\n                        break;\r\n                    case 'phone':\r\n                        values.phone = result.results;\r\n                        break;\r\n                    case 'social':\r\n                        values.social = result.results;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (i == (results.length - 1)) {\r\n                res.status(200).json({\r\n                    success: true,\r\n                    results: values\r\n                });\r\n            }\r\n        }\r\n    }).catch((err) => {\r\n        logger.error(err);\r\n        res.status(500).json({\r\n            success: false,\r\n            err: err\r\n        });\r\n    });\r\n});\r\n\r\nroutes.get('/skills', function (req, res) {\r\n    db.getSkills(req.headers['basicid']).then((results) => {\r\n        const values = [];\r\n        const resData = results.results;\r\n\r\n        for (let i = 0; i < resData.length; i++) {\r\n            const data = {\r\n                id: resData[i].id,\r\n                user: resData[i].user,\r\n                category: resData[i].category,\r\n                details: resData[i].details\r\n            }\r\n\r\n            values.push(data);\r\n\r\n            if (i == (resData.length - 1)) {\r\n                res.status(200).json({\r\n                    success: true,\r\n                    results: values\r\n                });\r\n            }\r\n        }\r\n    }).catch((err) => {\r\n        logger.error(err);\r\n        res.status(500).json({\r\n            success: false,\r\n            err: err\r\n        });\r\n    });\r\n});\r\n\r\nroutes.get('/technology', function (req, res) {\r\n    Promise.all([\r\n        db.getTechnologies(req.headers['basicid']),\r\n        db.getRepositories(req.headers['basicid'])\r\n    ]).then((results) => {\r\n        const values = {\r\n            technologies: null,\r\n            repositories: null\r\n        };\r\n\r\n        for (let i = 0; i < results.length; i++) {\r\n            const result = results[i];\r\n\r\n            if (result) {\r\n                switch (result.type) {\r\n                    case 'technology':\r\n                        values.technologies = result.results;\r\n                        break;\r\n                    case 'repository':\r\n                        values.repositories = result.results;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (i == (results.length - 1)) {\r\n                res.status(200).json({\r\n                    success: true,\r\n                    results: values\r\n                });\r\n            }\r\n        }\r\n    }).catch((err) => {\r\n        logger.error(err);\r\n        res.status(500).json({\r\n            success: false,\r\n            err: err\r\n        });\r\n    });\r\n});\r\n\r\nroutes.get('/education', function (req, res) {\r\n    db.getEducation(req.headers['basicid']).then((results) => Promise.all([\r\n        returnRes(results),\r\n        db.getPapers(results.results.map((x) => x.id))\r\n    ])).then((results) => {\r\n        const values = {\r\n            education: null,\r\n            papers: null\r\n        };\r\n\r\n        for (let i = 0; i < results.length; i++) {\r\n            const result = results[i];\r\n\r\n            if (result) {\r\n                switch (result.type) {\r\n                    case 'education':\r\n                        values.education = result.results;\r\n                        break;\r\n                    case 'paper':\r\n                        values.papers = result.results;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (i == (results.length - 1)) {\r\n                res.status(200).json({\r\n                    success: true,\r\n                    results: values\r\n                });\r\n            }\r\n        }\r\n    }).catch((err) => {\r\n        logger.error(err);\r\n        res.status(500).json({\r\n            success: false,\r\n            err: err\r\n        });\r\n    });\r\n});\r\n\r\nroutes.get('/experience', function (req, res) {\r\n    db.getExperience(req.headers['basicid']).then((results) => {\r\n        const values = [];\r\n        const resData = results.results;\r\n\r\n        for (let i = 0; i < resData.length; i++) {\r\n            const experience = resData[i];\r\n            const data = {\r\n                id: experience.id,\r\n                user: experience.user,\r\n                image: experience.image,\r\n                title: experience.title,\r\n                location: experience.location,\r\n                description: experience.description,\r\n                start_date: experience.start_date,\r\n                end_date: experience.end_date,\r\n                current: experience.current\r\n            }\r\n\r\n            values.push(data);\r\n\r\n            if (i == (resData.length - 1)) {\r\n                res.status(200).json({\r\n                    success: true,\r\n                    results: values\r\n                });\r\n            }\r\n        }\r\n    }).catch((err) => {\r\n        logger.error(err);\r\n        res.status(500).json({\r\n            success: false,\r\n            err: err\r\n        });\r\n    });\r\n});\r\n\r\nroutes.get('/other', function (req, res) {\r\n    Promise.all([\r\n        db.getAchievements(req.headers['basicid']),\r\n        db.getInterests(req.headers['basicid'])\r\n    ]).then((results) => {\r\n        const values = {\r\n            achievement: null,\r\n            interest: null\r\n        };\r\n\r\n        for (let i = 0; i < results.length; i++) {\r\n            const result = results[i];\r\n\r\n            if (result) {\r\n                switch (result.type) {\r\n                    case 'achievement':\r\n                        values.achievement = result.results;\r\n                        break;\r\n                    case 'interest':\r\n                        values.interest = result.results;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (i == (results.length - 1)) {\r\n                res.status(200).json({\r\n                    success: true,\r\n                    results: values\r\n                });\r\n            }\r\n        }\r\n    }).catch((err) => {\r\n        logger.error(err);\r\n        res.status(500).json({\r\n            success: false,\r\n            err: err\r\n        });\r\n    });\r\n});\r\n\r\nexport default routes;"],"file":"GetController.js"}