{"version":3,"sources":["../src/index.js"],"names":["require","config","logger","Logger","init","process","on","err","error","message","stack","reason","promise","cluster","setupMaster","exec","cpu","cpus","length","i","fork","worker","warn","id"],"mappings":";;AAEA;;AACA;;;;AAHAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAKA,IAAMC,MAAM,GAAGC,gBAAOC,IAAP,EAAf;;AAEAC,OAAO,CAACC,EAAR,CAAW,mBAAX,EAAgC,UAASC,GAAT,EAAc;AAC1CL,EAAAA,MAAM,CAACM,KAAP,CAAa,gCAAb,EAA+CD,GAAG,CAACE,OAAnD,EAA4DF,GAAG,CAACG,KAAhE;AACH,CAFD;AAIAL,OAAO,CAACC,EAAR,CAAW,oBAAX,EAAiC,UAACK,MAAD,EAASC,OAAT,EAAqB;AAClDV,EAAAA,MAAM,CAACM,KAAP,CAAa,iCAAb,EAAgDG,MAAhD,EAAwDC,OAAxD;AACH,CAFD;;AAIAC,iBAAQC,WAAR,CAAoB;AAChBC,EAAAA,IAAI,EAAE;AADU,CAApB;;AAIA,IAAIC,GAAG,GAAGhB,OAAO,CAAC,IAAD,CAAP,CAAciB,IAAd,GAAqBC,MAA/B;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;AAC1BN,mBAAQO,IAAR;AACH;;AAEDP,iBAAQP,EAAR,CAAW,MAAX,EAAmB,UAAUe,MAAV,EAAkB;AACjCnB,EAAAA,MAAM,CAACoB,IAAP,kBAAsBD,MAAM,CAACE,EAA7B;;AACAV,mBAAQO,IAAR;AACH,CAHD","sourceRoot":"start.js","sourcesContent":["require('dotenv').config();\r\n\r\nimport Logger from './helpers/logger';\r\nimport cluster from 'cluster';\r\n\r\nconst logger = Logger.init();\r\n\r\nprocess.on('uncaughtException', function(err) {\r\n    logger.error('Uncaught Exception => %s\\n\\n%s', err.message, err.stack);\r\n});\r\n\r\nprocess.on('unhandledRejection', (reason, promise) => {\r\n    logger.error('Unhandled Rejection => %s\\n\\n%s', reason, promise);\r\n});\r\n\r\ncluster.setupMaster({\r\n    exec: './helpers/workers.js'\r\n});\r\n\r\nvar cpu = require('os').cpus().length;\r\n\r\nfor (let i = 0; i < cpu; i++) {\r\n    cluster.fork();\r\n}\r\n\r\ncluster.on('exit', function (worker) {\r\n    logger.warn(`Worker ${worker.id} died. Restarting Worker`);\r\n    cluster.fork();\r\n});\r\n"],"file":"index.js"}